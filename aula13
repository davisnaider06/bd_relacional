SELECT * FROM parametro;

SELECT DISTINCT s.id_reservatorio -- Usamos DISTINCT para evitar IDs repetidos
FROM series_temporais s
INNER JOIN parametro p ON s.id_parametro = p.id_parametro
WHERE p.nome = 'Oxigênio Dissolvido';



SELECT r.nome AS reservatorio
FROM reservatorio r
WHERE r.id_reservatorio IN (
    SELECT s.id_reservatorio
    FROM series_temporais s
    INNER JOIN parametro p ON s.id_parametro = p.id_parametro
    WHERE p.nome = 'Oxigênio Dissolvido'
);
-- Resultado esperado: Jaguari, Represa Funil (os nomes correspondentes aos IDs 1, 3, 2)



-- Lista os nomes dos reservatórios para os quais existe pelo menos uma medição
-- de 'Oxigênio Dissolvido'. A subconsulta agora é correlacionada.
SELECT r.nome AS reservatorio
FROM reservatorio r
WHERE EXISTS (
    SELECT 1 -- Seleciona um valor constante, pois só importa se a linha existe
    FROM series_temporais s
    INNER JOIN parametro p ON s.id_parametro = p.id_parametro
    WHERE s.id_reservatorio = r.id_reservatorio -- Condição de correlação
      AND p.nome = 'Oxigênio Dissolvido'
);
-- Resultado esperado: Jaguari, Represa Funil 


-- Execute as duas consultas anteriores precedidas por EXPLAIN ANALYZE
-- para ver o plano de execução e o tempo gasto pelo PostgreSQL.

-- EXPLAIN ANALYZE
-- SELECT r.nome AS reservatorio
-- FROM reservatorio r
-- WHERE r.id_reservatorio IN (...subconsulta com IN...);

-- EXPLAIN ANALYZE
-- SELECT r.nome AS reservatorio
-- FROM reservatorio r
-- WHERE EXISTS (...subconsulta com EXISTS...);

